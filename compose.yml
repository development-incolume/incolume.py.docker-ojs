# File: docker-compose.yml
# Access via "http://localhost:8081"
#
# Call example:
# $ docker-compose -f compose.yml up -d

version: "3.9"

networks:
  inside:
    driver: bridge
    external: false

services:
  pgadmin:
    restart: unless-stopped
    image: dpage/pgadmin4
    container_name: "ojs_pgadmin_${OJS_PGAMIN_NAME:-manage}"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: "${OJS_DB_PASSWORD:-ojsPwd}"
      PGADMIN_LISTEN_PORT: 80
      TERM: xterm-256color
      # HTTP_PROXY: 'http://10.1.101.101:8080'
      # HTTPS_PROXY: 'http://10.1.101.101:8080'
    ports:
      - '5050:80'
    volumes:
      - ./vol/pgadmin:/root/.pgadmin
    networks:
      inside:

  db:
    restart: unless-stopped
    image: mariadb:10.2
    env_file:
      - .env
    container_name: "ojs_db_${COMPOSE_PROJECT_NAME:-demo}"
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD:-ojsPwd}"
      MYSQL_DATABASE: "${DB_DATABASE:-ojs}"
      MYSQL_USER: "${DB_USER:-ojs}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-ojsPwd}"
    #    volumes:
    #      - ./volumes/db:/var/lib/mysql
    #      - ./volumes/logs/db:/var/log/mysql
    #      - ./volumes/config/db.charset.conf:/etc/mysql/conf.d/charset.cnf
    #      - ./volumes/migration:/docker-entrypoint-initdb.d
    networks:
      - inside

  pgsql:
    restart: unless-stopped
    image: postgres:14-alpine3.19
    env_file:
      - .env
    container_name: "ojs_pgsql_${COMPOSE_PROJECT_NAME:-hom}"
    tty: true
    environment:
      # PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: "${OJS_DB_USER:-ojs}"
      POSTGRES_PASSWORD: "${OJS_DB_PASSWORD:-ojsPwd}"
      POSTGRES_DB: "${OJS_DB_NAME:-ojs}"
      TERM: xterm-256color
      HTTP_PROXY: ${HTTP_PROXY:-}
      HTTPS_PROXY: ${HTTPS_PROXY:-}
      http_proxy: ${HTTP_PROXY:-}
      https_proxy: ${HTTPS_PROXY:-}
    ports:
      - "5432:5432"
    # volumes:
    #  - ./vol/data:/var/lib/postgresql/data/
    networks:
      inside:

  ojs:
    restart: unless-stopped
    container_name: "ojs_app_${COMPOSE_PROJECT_NAME:-hom}"
    hostname: "${COMPOSE_PROJECT_NAME:-demo}"
    image: incolume/rjp:0.3.0
    env_file:
      - .env
    build:
      args:
        HTTP_PROXY: ${HTTP_PROXY:-}
        HTTPS_PROXY: ${HTTPS_PROXY:-}
        OJS_VERSION: "3_3_0-16"
        OJS_CLI_INSTALL: "0"
        OJS_DB_HOST: db
        OJS_DB_USER: "${OJS_DB_USER:-ojs}"
        OJS_DB_PASSWORD: "${OJS_DB_PASSWORD:-ojsPwd}"
        OJS_DB_NAME: "${OJS_DB_NAME:-ojs}"
      context: ./versions/rjp-0-3-0/
    environment:
      SERVERNAME: "${SERVERNAME:-localhost}"
      TERM: xterm-256color
      # HTTP_PROXY: 'http://10.1.101.101:8080'
      # HTTPS_PROXY: 'http://10.1.101.101:8080'
    ports:
      - "${HTTP_PORT:-8081}:80"
      - "${HTTPS_PORT:-1443}:443"
#    volumes:
#      - /etc/localtime:/etc/localtime
#      - ./vol/private:/var/www/files
#      - ./vol/public:/var/www/html/public
#      - ./vol/logs/app:/var/log/apache2
#      - ./vol/app-hom/ojs-3.2.1-4/:/var/www/html/
#      # WARNING: You can only enable file-volumes if file exists in the container.
#      - ./vol/config/ojs.config.inc.php:/var/www/html/config.inc.php
#      - ./vol/config/apache.htaccess:/var/www/html/.htaccess
#      - ./vol/php.custom.ini:/usr/local/etc/php/conf.d/custom.ini

    networks:
      - inside
    depends_on:
      - db
      - pgsql

